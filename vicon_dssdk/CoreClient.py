# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError('Python 2.7 or later required')

# Import the low-level C/C++ module
if __package__ or '.' in __name__:
    from . import _CoreClient
else:
    import _CoreClient

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if name == "thisown":
        return self.this.own(value)
    if name == "this":
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if not static:
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if name == "thisown":
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


SHARED_PTR_DISOWN = _CoreClient.SHARED_PTR_DISOWN
class doubleArray(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _CoreClient.doubleArray_swiginit(self, _CoreClient.new_doubleArray(nelements))
    __swig_destroy__ = _CoreClient.delete_doubleArray

    def __getitem__(self, index):
        return _CoreClient.doubleArray___getitem__(self, index)

    def __setitem__(self, index, value):
        return _CoreClient.doubleArray___setitem__(self, index, value)

    def cast(self):
        return _CoreClient.doubleArray_cast(self)

    @staticmethod
    def frompointer(t):
        return _CoreClient.doubleArray_frompointer(t)

# Register doubleArray in _CoreClient:
_CoreClient.doubleArray_swigregister(doubleArray)

def doubleArray_frompointer(t):
    return _CoreClient.doubleArray_frompointer(t)

class ICGClient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    @staticmethod
    def CreateCGClient():
        return _CoreClient.ICGClient_CreateCGClient()

    def Destroy(self):
        return _CoreClient.ICGClient_Destroy(self)

    def Connect(self, *args):
        return _CoreClient.ICGClient_Connect(self, *args)

    def ReceiveMulticastData(self, i_MulticastIPAddress, i_LocalIPAddress, i_Port):
        return _CoreClient.ICGClient_ReceiveMulticastData(self, i_MulticastIPAddress, i_LocalIPAddress, i_Port)

    def StopReceivingMulticastData(self):
        return _CoreClient.ICGClient_StopReceivingMulticastData(self)

    def IsConnected(self):
        return _CoreClient.ICGClient_IsConnected(self)

    def IsMulticastReceiving(self):
        return _CoreClient.ICGClient_IsMulticastReceiving(self)

    def SetRequestTypes(self, i_RequestedType, i_bEnable=True):
        return _CoreClient.ICGClient_SetRequestTypes(self, i_RequestedType, i_bEnable)

    def SetBufferSize(self, i_MaxFrames):
        return _CoreClient.ICGClient_SetBufferSize(self, i_MaxFrames)

    def SetDecodeVideo(self, i_bDecode):
        return _CoreClient.ICGClient_SetDecodeVideo(self, i_bDecode)

    def SetStreamMode(self, i_bStream):
        return _CoreClient.ICGClient_SetStreamMode(self, i_bStream)

    def SetApexDeviceFeedback(self, i_DeviceID, i_bOn):
        return _CoreClient.ICGClient_SetApexDeviceFeedback(self, i_DeviceID, i_bOn)

    def SetFilter(self, i_rFilter):
        return _CoreClient.ICGClient_SetFilter(self, i_rFilter)

    def SendPing(self):
        return _CoreClient.ICGClient_SendPing(self)

    def RequestFrame(self):
        return _CoreClient.ICGClient_RequestFrame(self)

    def RequestNextFrame(self):
        return _CoreClient.ICGClient_RequestNextFrame(self)

    def ClearBuffer(self):
        return _CoreClient.ICGClient_ClearBuffer(self)

    def SetServerToTransmitMulticast(self, i_MulticastIPAddress, i_ServerIPAddress, i_Port):
        return _CoreClient.ICGClient_SetServerToTransmitMulticast(self, i_MulticastIPAddress, i_ServerIPAddress, i_Port)

    def StopMulticastTransmission(self):
        return _CoreClient.ICGClient_StopMulticastTransmission(self)

    def IsMulticastController(self):
        return _CoreClient.ICGClient_IsMulticastController(self)

    def PollFrame(self, o_rFrame):
        return _CoreClient.ICGClient_PollFrame(self, o_rFrame)

    def PollFrames(self, o_rFrames):
        return _CoreClient.ICGClient_PollFrames(self, o_rFrames)

    def WaitFrame(self, o_rFrame, i_TimeoutMs):
        return _CoreClient.ICGClient_WaitFrame(self, o_rFrame, i_TimeoutMs)

    def WaitFrames(self, o_rFrames, i_TimeoutMs):
        return _CoreClient.ICGClient_WaitFrames(self, o_rFrames, i_TimeoutMs)

    def SetLogFile(self, i_rLog):
        return _CoreClient.ICGClient_SetLogFile(self, i_rLog)
    __swig_destroy__ = _CoreClient.delete_ICGClient

# Register ICGClient in _CoreClient:
_CoreClient.ICGClient_swigregister(ICGClient)

def ICGClient_CreateCGClient():
    return _CoreClient.ICGClient_CreateCGClient()

Up = _CoreClient.Up
Down = _CoreClient.Down
Left = _CoreClient.Left
Right = _CoreClient.Right
Forward = _CoreClient.Forward
Backward = _CoreClient.Backward
ServerOrientationUnknown = _CoreClient.ServerOrientationUnknown
YUp = _CoreClient.YUp
ZUp = _CoreClient.ZUp
AxisMappingResultSuccess = _CoreClient.AxisMappingResultSuccess
AxisMappingResultCoLinearAxes = _CoreClient.AxisMappingResultCoLinearAxes
AxisMappingResultLeftHandedAxes = _CoreClient.AxisMappingResultLeftHandedAxes
ClientPull = _CoreClient.ClientPull
ClientPullPreFetch = _CoreClient.ClientPullPreFetch
ServerPush = _CoreClient.ServerPush
TimecodeStandardNone = _CoreClient.TimecodeStandardNone
PAL = _CoreClient.PAL
NTSC = _CoreClient.NTSC
NTSCDrop = _CoreClient.NTSCDrop
Film = _CoreClient.Film
NTSCFilm = _CoreClient.NTSCFilm
ATSC = _CoreClient.ATSC
DeviceTypeUnknown = _CoreClient.DeviceTypeUnknown
ForcePlate = _CoreClient.ForcePlate
EyeTracker = _CoreClient.EyeTracker
UnitUnknown = _CoreClient.UnitUnknown
Volt = _CoreClient.Volt
Newton = _CoreClient.Newton
NewtonMeter = _CoreClient.NewtonMeter
Meter = _CoreClient.Meter
Kilogram = _CoreClient.Kilogram
Second = _CoreClient.Second
Ampere = _CoreClient.Ampere
Kelvin = _CoreClient.Kelvin
Mole = _CoreClient.Mole
Candela = _CoreClient.Candela
Radian = _CoreClient.Radian
Steradian = _CoreClient.Steradian
MeterSquared = _CoreClient.MeterSquared
MeterCubed = _CoreClient.MeterCubed
MeterPerSecond = _CoreClient.MeterPerSecond
MeterPerSecondSquared = _CoreClient.MeterPerSecondSquared
RadianPerSecond = _CoreClient.RadianPerSecond
RadianPerSecondSquared = _CoreClient.RadianPerSecondSquared
Hertz = _CoreClient.Hertz
Joule = _CoreClient.Joule
Watt = _CoreClient.Watt
Pascal = _CoreClient.Pascal
Lumen = _CoreClient.Lumen
Lux = _CoreClient.Lux
Coulomb = _CoreClient.Coulomb
Ohm = _CoreClient.Ohm
Farad = _CoreClient.Farad
Weber = _CoreClient.Weber
Tesla = _CoreClient.Tesla
Henry = _CoreClient.Henry
Siemens = _CoreClient.Siemens
Becquerel = _CoreClient.Becquerel
Gray = _CoreClient.Gray
Sievert = _CoreClient.Sievert
Katal = _CoreClient.Katal
Unknown = _CoreClient.Unknown
NotImplemented = _CoreClient.NotImplemented
Success = _CoreClient.Success
InvalidHostName = _CoreClient.InvalidHostName
InvalidMulticastIP = _CoreClient.InvalidMulticastIP
NullClient = _CoreClient.NullClient
ClientAlreadyConnected = _CoreClient.ClientAlreadyConnected
ClientConnectionFailed = _CoreClient.ClientConnectionFailed
ServerAlreadyTransmittingMulticast = _CoreClient.ServerAlreadyTransmittingMulticast
ServerNotTransmittingMulticast = _CoreClient.ServerNotTransmittingMulticast
NotConnected = _CoreClient.NotConnected
NoFrame = _CoreClient.NoFrame
InvalidIndex = _CoreClient.InvalidIndex
InvalidCameraName = _CoreClient.InvalidCameraName
InvalidSubjectName = _CoreClient.InvalidSubjectName
InvalidSegmentName = _CoreClient.InvalidSegmentName
InvalidMarkerName = _CoreClient.InvalidMarkerName
InvalidDeviceName = _CoreClient.InvalidDeviceName
InvalidDeviceOutputName = _CoreClient.InvalidDeviceOutputName
InvalidLatencySampleName = _CoreClient.InvalidLatencySampleName
InvalidFrameRateName = _CoreClient.InvalidFrameRateName
CoLinearAxes = _CoreClient.CoLinearAxes
LeftHandedAxes = _CoreClient.LeftHandedAxes
HapticAlreadySet = _CoreClient.HapticAlreadySet
EarlyDataRequested = _CoreClient.EarlyDataRequested
LateDataRequested = _CoreClient.LateDataRequested
InvalidOperation = _CoreClient.InvalidOperation
NotSupported = _CoreClient.NotSupported
ConfigurationFailed = _CoreClient.ConfigurationFailed
NotPresent = _CoreClient.NotPresent
ArgumentOutOfRange = _CoreClient.ArgumentOutOfRange
class VClient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _CoreClient.VClient_swiginit(self, _CoreClient.new_VClient())
    __swig_destroy__ = _CoreClient.delete_VClient

    def GetVersion(self):
        return _CoreClient.VClient_GetVersion(self)

    def Connect(self, i_pClient, i_rHostName):
        return _CoreClient.VClient_Connect(self, i_pClient, i_rHostName)

    def ConnectToMulticast(self, i_pClient, i_rLocalIP, i_rMulticastIP):
        return _CoreClient.VClient_ConnectToMulticast(self, i_pClient, i_rLocalIP, i_rMulticastIP)

    def Disconnect(self):
        return _CoreClient.VClient_Disconnect(self)

    def StartTransmittingMulticast(self, i_rServerIP, i_rMulticastIP):
        return _CoreClient.VClient_StartTransmittingMulticast(self, i_rServerIP, i_rMulticastIP)

    def StopTransmittingMulticast(self):
        return _CoreClient.VClient_StopTransmittingMulticast(self)

    def IsConnected(self):
        return _CoreClient.VClient_IsConnected(self)

    def SetBufferSize(self, i_MaxFrames):
        return _CoreClient.VClient_SetBufferSize(self, i_MaxFrames)

    def GetFrame(self):
        return _CoreClient.VClient_GetFrame(self)

    def GetFrameNumber(self):
        return _CoreClient.VClient_GetFrameNumber(self)

    def GetFrameRate(self):
        return _CoreClient.VClient_GetFrameRate(self)

    def GetTimecode(self):
        return _CoreClient.VClient_GetTimecode(self)

    def GetLatencyTotal(self):
        return _CoreClient.VClient_GetLatencyTotal(self)

    def GetLatencySampleCount(self):
        return _CoreClient.VClient_GetLatencySampleCount(self)

    def GetLatencySampleName(self, i_SampleIndex):
        return _CoreClient.VClient_GetLatencySampleName(self, i_SampleIndex)

    def GetLatencySampleValue(self, i_rSampleName):
        return _CoreClient.VClient_GetLatencySampleValue(self, i_rSampleName)

    def GetHardwareFrameNumber(self):
        return _CoreClient.VClient_GetHardwareFrameNumber(self)

    def GetFrameRateCount(self):
        return _CoreClient.VClient_GetFrameRateCount(self)

    def GetFrameRateName(self, i_FrameRateIndex):
        return _CoreClient.VClient_GetFrameRateName(self, i_FrameRateIndex)

    def GetFrameRateValue(self, i_rFrameRateName):
        return _CoreClient.VClient_GetFrameRateValue(self, i_rFrameRateName)

    def SetSegmentDataEnabled(self, i_i_bEnabled):
        return _CoreClient.VClient_SetSegmentDataEnabled(self, i_i_bEnabled)

    def SetLightweightSegmentDataEnabled(self, i_i_bEnabled):
        return _CoreClient.VClient_SetLightweightSegmentDataEnabled(self, i_i_bEnabled)

    def SetMarkerDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetMarkerDataEnabled(self, i_bEnabled)

    def SetUnlabeledMarkerDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetUnlabeledMarkerDataEnabled(self, i_bEnabled)

    def SetMarkerRayDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetMarkerRayDataEnabled(self, i_bEnabled)

    def SetDeviceDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetDeviceDataEnabled(self, i_bEnabled)

    def SetCentroidDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetCentroidDataEnabled(self, i_bEnabled)

    def SetGreyscaleDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetGreyscaleDataEnabled(self, i_bEnabled)

    def SetDebugDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetDebugDataEnabled(self, i_bEnabled)

    def SetCameraWand2dDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetCameraWand2dDataEnabled(self, i_bEnabled)

    def SetCameraCalibrationDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetCameraCalibrationDataEnabled(self, i_bEnabled)

    def SetVideoDataEnabled(self, i_bEnabled):
        return _CoreClient.VClient_SetVideoDataEnabled(self, i_bEnabled)

    def EnableSegmentData(self):
        return _CoreClient.VClient_EnableSegmentData(self)

    def EnableLightweightSegmentData(self):
        return _CoreClient.VClient_EnableLightweightSegmentData(self)

    def EnableMarkerData(self):
        return _CoreClient.VClient_EnableMarkerData(self)

    def EnableUnlabeledMarkerData(self):
        return _CoreClient.VClient_EnableUnlabeledMarkerData(self)

    def EnableMarkerRayData(self):
        return _CoreClient.VClient_EnableMarkerRayData(self)

    def EnableDeviceData(self):
        return _CoreClient.VClient_EnableDeviceData(self)

    def EnableCentroidData(self):
        return _CoreClient.VClient_EnableCentroidData(self)

    def EnableGreyscaleData(self):
        return _CoreClient.VClient_EnableGreyscaleData(self)

    def EnableDebugData(self):
        return _CoreClient.VClient_EnableDebugData(self)

    def EnableCameraWand2dData(self):
        return _CoreClient.VClient_EnableCameraWand2dData(self)

    def EnableCameraCalibrationData(self):
        return _CoreClient.VClient_EnableCameraCalibrationData(self)

    def EnableVideoData(self):
        return _CoreClient.VClient_EnableVideoData(self)

    def DisableSegmentData(self):
        return _CoreClient.VClient_DisableSegmentData(self)

    def DisableLightweightSegmentData(self):
        return _CoreClient.VClient_DisableLightweightSegmentData(self)

    def DisableMarkerData(self):
        return _CoreClient.VClient_DisableMarkerData(self)

    def DisableUnlabeledMarkerData(self):
        return _CoreClient.VClient_DisableUnlabeledMarkerData(self)

    def DisableMarkerRayData(self):
        return _CoreClient.VClient_DisableMarkerRayData(self)

    def DisableDeviceData(self):
        return _CoreClient.VClient_DisableDeviceData(self)

    def DisableCentroidData(self):
        return _CoreClient.VClient_DisableCentroidData(self)

    def DisableGreyscaleData(self):
        return _CoreClient.VClient_DisableGreyscaleData(self)

    def DisableDebugData(self):
        return _CoreClient.VClient_DisableDebugData(self)

    def DisableCameraWand2dData(self):
        return _CoreClient.VClient_DisableCameraWand2dData(self)

    def DisableCameraCalibrationData(self):
        return _CoreClient.VClient_DisableCameraCalibrationData(self)

    def DisableVideoData(self):
        return _CoreClient.VClient_DisableVideoData(self)

    def IsSegmentDataEnabled(self):
        return _CoreClient.VClient_IsSegmentDataEnabled(self)

    def IsLightweightSegmentDataEnabled(self):
        return _CoreClient.VClient_IsLightweightSegmentDataEnabled(self)

    def IsMarkerDataEnabled(self):
        return _CoreClient.VClient_IsMarkerDataEnabled(self)

    def IsUnlabeledMarkerDataEnabled(self):
        return _CoreClient.VClient_IsUnlabeledMarkerDataEnabled(self)

    def IsMarkerRayDataEnabled(self):
        return _CoreClient.VClient_IsMarkerRayDataEnabled(self)

    def IsDeviceDataEnabled(self):
        return _CoreClient.VClient_IsDeviceDataEnabled(self)

    def IsCentroidDataEnabled(self):
        return _CoreClient.VClient_IsCentroidDataEnabled(self)

    def IsGreyscaleDataEnabled(self):
        return _CoreClient.VClient_IsGreyscaleDataEnabled(self)

    def IsDebugDataEnabled(self):
        return _CoreClient.VClient_IsDebugDataEnabled(self)

    def IsCameraWand2dDataEnabled(self):
        return _CoreClient.VClient_IsCameraWand2dDataEnabled(self)

    def IsCameraCalibrationDataEnabled(self):
        return _CoreClient.VClient_IsCameraCalibrationDataEnabled(self)

    def IsVideoDataEnabled(self):
        return _CoreClient.VClient_IsVideoDataEnabled(self)

    def SetStreamMode(self, i_Mode):
        return _CoreClient.VClient_SetStreamMode(self, i_Mode)

    def SetApexDeviceFeedback(self, i_rDeviceName, i_bOn):
        return _CoreClient.VClient_SetApexDeviceFeedback(self, i_rDeviceName, i_bOn)

    def SetAxisMapping(self, i_XAxis, i_YAxis, i_ZAxis):
        return _CoreClient.VClient_SetAxisMapping(self, i_XAxis, i_YAxis, i_ZAxis)

    def GetAxisMapping(self):
        return _CoreClient.VClient_GetAxisMapping(self)

    def GetServerOrientation(self):
        return _CoreClient.VClient_GetServerOrientation(self)

    def GetSubjectCount(self):
        return _CoreClient.VClient_GetSubjectCount(self)

    def GetSubjectName(self, i_SubjectIndex):
        return _CoreClient.VClient_GetSubjectName(self, i_SubjectIndex)

    def GetSubjectRootSegmentName(self, i_rSubjectName):
        return _CoreClient.VClient_GetSubjectRootSegmentName(self, i_rSubjectName)

    def GetSegmentCount(self, i_rSubjectName):
        return _CoreClient.VClient_GetSegmentCount(self, i_rSubjectName)

    def GetSegmentName(self, i_rSubjectName, i_SegmentIndex):
        return _CoreClient.VClient_GetSegmentName(self, i_rSubjectName, i_SegmentIndex)

    def GetSegmentChildCount(self, i_rSubjectName, i_rSegmentName):
        return _CoreClient.VClient_GetSegmentChildCount(self, i_rSubjectName, i_rSegmentName)

    def GetSegmentChildName(self, i_rSubjectName, i_rSegmentName, i_SegmentIndex):
        return _CoreClient.VClient_GetSegmentChildName(self, i_rSubjectName, i_rSegmentName, i_SegmentIndex)

    def GetSegmentParentName(self, i_rSubjectName, i_rSegmentName):
        return _CoreClient.VClient_GetSegmentParentName(self, i_rSubjectName, i_rSegmentName)

    def GetSegmentStaticTranslation(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VClient_GetSegmentStaticTranslation(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentStaticRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VClient_GetSegmentStaticRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentStaticRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation):
        return _CoreClient.VClient_GetSegmentStaticRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation)

    def GetSegmentStaticRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector):
        return _CoreClient.VClient_GetSegmentStaticRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector)

    def GetSegmentStaticRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VClient_GetSegmentStaticRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentStaticScale(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VClient_GetSegmentStaticScale(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentGlobalTranslation(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VClient_GetSegmentGlobalTranslation(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentGlobalRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VClient_GetSegmentGlobalRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentGlobalRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation):
        return _CoreClient.VClient_GetSegmentGlobalRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation)

    def GetSegmentGlobalRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector):
        return _CoreClient.VClient_GetSegmentGlobalRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector)

    def GetSegmentGlobalRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VClient_GetSegmentGlobalRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentLocalTranslation(self, i_rSubjectName, i_rSegmentName, o_pThreeVector):
        return _CoreClient.VClient_GetSegmentLocalTranslation(self, i_rSubjectName, i_rSegmentName, o_pThreeVector)

    def GetSegmentLocalRotationHelical(self, i_rSubjectName, i_rSegmentName, o_pThreeVector):
        return _CoreClient.VClient_GetSegmentLocalRotationHelical(self, i_rSubjectName, i_rSegmentName, o_pThreeVector)

    def GetSegmentLocalRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation):
        return _CoreClient.VClient_GetSegmentLocalRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation)

    def GetSegmentLocalRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_pFourVector):
        return _CoreClient.VClient_GetSegmentLocalRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_pFourVector)

    def GetSegmentLocalRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_pThreeVector):
        return _CoreClient.VClient_GetSegmentLocalRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_pThreeVector)

    def GetObjectQuality(self, i_rObjectName):
        return _CoreClient.VClient_GetObjectQuality(self, i_rObjectName)

    def GetMarkerCount(self, i_rSubjectName):
        return _CoreClient.VClient_GetMarkerCount(self, i_rSubjectName)

    def GetMarkerName(self, i_rSubjectName, i_MarkerIndex):
        return _CoreClient.VClient_GetMarkerName(self, i_rSubjectName, i_MarkerIndex)

    def GetMarkerParentName(self, i_rSubjectName, i_rMarkerName):
        return _CoreClient.VClient_GetMarkerParentName(self, i_rSubjectName, i_rMarkerName)

    def GetMarkerGlobalTranslation(self, i_rSubjectName, i_rMarkerName, o_rThreeVector):
        return _CoreClient.VClient_GetMarkerGlobalTranslation(self, i_rSubjectName, i_rMarkerName, o_rThreeVector)

    def GetMarkerRayAssignmentCount(self, i_rSubjectName, i_rMarkerName):
        return _CoreClient.VClient_GetMarkerRayAssignmentCount(self, i_rSubjectName, i_rMarkerName)

    def GetMarkerRayAssignment(self, i_rSubjectName, i_rMarkerName, i_rAssignmentIndex):
        return _CoreClient.VClient_GetMarkerRayAssignment(self, i_rSubjectName, i_rMarkerName, i_rAssignmentIndex)

    def GetUnlabeledMarkerCount(self):
        return _CoreClient.VClient_GetUnlabeledMarkerCount(self)

    def GetUnlabeledMarkerGlobalTranslation(self, i_MarkerIndex, o_rTranslation):
        return _CoreClient.VClient_GetUnlabeledMarkerGlobalTranslation(self, i_MarkerIndex, o_rTranslation)

    def GetLabeledMarkerCount(self):
        return _CoreClient.VClient_GetLabeledMarkerCount(self)

    def GetLabeledMarkerGlobalTranslation(self, i_MarkerIndex, o_rTranslation):
        return _CoreClient.VClient_GetLabeledMarkerGlobalTranslation(self, i_MarkerIndex, o_rTranslation)

    def GetDeviceCount(self):
        return _CoreClient.VClient_GetDeviceCount(self)

    def GetDeviceName(self, i_DeviceIndex):
        return _CoreClient.VClient_GetDeviceName(self, i_DeviceIndex)

    def GetDeviceOutputCount(self, i_rDeviceName):
        return _CoreClient.VClient_GetDeviceOutputCount(self, i_rDeviceName)

    def GetDeviceOutputName(self, i_rDeviceName, i_DeviceOutputIndex):
        return _CoreClient.VClient_GetDeviceOutputName(self, i_rDeviceName, i_DeviceOutputIndex)

    def GetDeviceOutputNameComponent(self, i_rDeviceName, i_DeviceOutputIndex):
        return _CoreClient.VClient_GetDeviceOutputNameComponent(self, i_rDeviceName, i_DeviceOutputIndex)

    def GetDeviceOutputSubsamples(self, *args):
        return _CoreClient.VClient_GetDeviceOutputSubsamples(self, *args)

    def GetDeviceOutputValue(self, *args):
        return _CoreClient.VClient_GetDeviceOutputValue(self, *args)

    def GetForcePlateCount(self):
        return _CoreClient.VClient_GetForcePlateCount(self)

    def GetForcePlateID(self, i_ZeroIndexedPlateIndex):
        return _CoreClient.VClient_GetForcePlateID(self, i_ZeroIndexedPlateIndex)

    def GetForceVector(self, i_PlateID, o_rForceVector):
        return _CoreClient.VClient_GetForceVector(self, i_PlateID, o_rForceVector)

    def GetMomentVector(self, i_PlateID, o_rMomentVector):
        return _CoreClient.VClient_GetMomentVector(self, i_PlateID, o_rMomentVector)

    def GetCentreOfPressure(self, i_PlateID, o_rLocation):
        return _CoreClient.VClient_GetCentreOfPressure(self, i_PlateID, o_rLocation)

    def GetGlobalForceVector(self, i_PlateID, o_rForceVector):
        return _CoreClient.VClient_GetGlobalForceVector(self, i_PlateID, o_rForceVector)

    def GetGlobalMomentVector(self, i_PlateID, o_rMomentVector):
        return _CoreClient.VClient_GetGlobalMomentVector(self, i_PlateID, o_rMomentVector)

    def GetGlobalCentreOfPressure(self, i_PlateID, o_rLocation):
        return _CoreClient.VClient_GetGlobalCentreOfPressure(self, i_PlateID, o_rLocation)

    def GetForcePlateSubsamples(self, i_PlateID):
        return _CoreClient.VClient_GetForcePlateSubsamples(self, i_PlateID)

    def GetForceVectorAtSample(self, i_PlateID, i_Subsample, o_rForceVector):
        return _CoreClient.VClient_GetForceVectorAtSample(self, i_PlateID, i_Subsample, o_rForceVector)

    def GetMomentVectorAtSample(self, i_PlateID, i_Subsample, o_rMomentVector):
        return _CoreClient.VClient_GetMomentVectorAtSample(self, i_PlateID, i_Subsample, o_rMomentVector)

    def GetCentreOfPressureAtSample(self, i_PlateID, i_Subsample, o_rLocation):
        return _CoreClient.VClient_GetCentreOfPressureAtSample(self, i_PlateID, i_Subsample, o_rLocation)

    def GetGlobalForceVectorAtSample(self, i_PlateID, i_Subsample, o_rForceVector):
        return _CoreClient.VClient_GetGlobalForceVectorAtSample(self, i_PlateID, i_Subsample, o_rForceVector)

    def GetGlobalMomentVectorAtSample(self, i_PlateID, i_Subsample, o_rMomentVector):
        return _CoreClient.VClient_GetGlobalMomentVectorAtSample(self, i_PlateID, i_Subsample, o_rMomentVector)

    def GetGlobalCentreOfPressureAtSample(self, i_PlateID, i_Subsample, o_rLocation):
        return _CoreClient.VClient_GetGlobalCentreOfPressureAtSample(self, i_PlateID, i_Subsample, o_rLocation)

    def GetNumberOfAnalogChannels(self, i_PlateID):
        return _CoreClient.VClient_GetNumberOfAnalogChannels(self, i_PlateID)

    def GetAnalogChannelVoltage(self, i_PlateID, i_ZeroIndexedChannelIndex):
        return _CoreClient.VClient_GetAnalogChannelVoltage(self, i_PlateID, i_ZeroIndexedChannelIndex)

    def GetAnalogChannelVoltageAtSample(self, i_PlateID, i_ZeroIndexedChannelIndex, i_Subsample):
        return _CoreClient.VClient_GetAnalogChannelVoltageAtSample(self, i_PlateID, i_ZeroIndexedChannelIndex, i_Subsample)

    def GetEyeTrackerCount(self):
        return _CoreClient.VClient_GetEyeTrackerCount(self)

    def GetEyeTrackerID(self, i_EyeTrackerIndex):
        return _CoreClient.VClient_GetEyeTrackerID(self, i_EyeTrackerIndex)

    def GetEyeTrackerGlobalPosition(self, i_EyeTrackerID, o_rThreeVector):
        return _CoreClient.VClient_GetEyeTrackerGlobalPosition(self, i_EyeTrackerID, o_rThreeVector)

    def GetEyeTrackerGlobalGazeVector(self, i_EyeTrackerID, o_rThreeVector):
        return _CoreClient.VClient_GetEyeTrackerGlobalGazeVector(self, i_EyeTrackerID, o_rThreeVector)

    def GetCameraCount(self):
        return _CoreClient.VClient_GetCameraCount(self)

    def GetDynamicCameraCount(self):
        return _CoreClient.VClient_GetDynamicCameraCount(self)

    def GetCameraName(self, i_CameraIndex):
        return _CoreClient.VClient_GetCameraName(self, i_CameraIndex)

    def GetDynamicCameraName(self, i_CameraIndex):
        return _CoreClient.VClient_GetDynamicCameraName(self, i_CameraIndex)

    def GetCameraID(self, i_rCameraName):
        return _CoreClient.VClient_GetCameraID(self, i_rCameraName)

    def GetCameraUserID(self, i_rCameraName):
        return _CoreClient.VClient_GetCameraUserID(self, i_rCameraName)

    def GetCameraType(self, i_rCameraName):
        return _CoreClient.VClient_GetCameraType(self, i_rCameraName)

    def GetCameraDisplayName(self, i_rCameraName):
        return _CoreClient.VClient_GetCameraDisplayName(self, i_rCameraName)

    def GetCameraSensorMode(self, i_rCameraName, o_rMode):
        return _CoreClient.VClient_GetCameraSensorMode(self, i_rCameraName, o_rMode)

    def GetCameraWindowSize(self, i_rCameraName):
        return _CoreClient.VClient_GetCameraWindowSize(self, i_rCameraName)

    def GetCameraResolution(self, i_rCameraName):
        return _CoreClient.VClient_GetCameraResolution(self, i_rCameraName)

    def GetIsVideoCamera(self, i_rCameraName):
        return _CoreClient.VClient_GetIsVideoCamera(self, i_rCameraName)

    def GetCameraGlobalTranslation(self, i_rCameraName, o_rThreeVector):
        return _CoreClient.VClient_GetCameraGlobalTranslation(self, i_rCameraName, o_rThreeVector)

    def GetCameraGlobalRotationHelical(self, i_rCameraName, o_rThreeVector):
        return _CoreClient.VClient_GetCameraGlobalRotationHelical(self, i_rCameraName, o_rThreeVector)

    def GetCameraGlobalRotationMatrix(self, i_rCameraName, o_rRotation):
        return _CoreClient.VClient_GetCameraGlobalRotationMatrix(self, i_rCameraName, o_rRotation)

    def GetCameraGlobalRotationQuaternion(self, i_rCameraName, o_rFourVector):
        return _CoreClient.VClient_GetCameraGlobalRotationQuaternion(self, i_rCameraName, o_rFourVector)

    def GetCameraGlobalRotationEulerXYZ(self, i_rCameraName, o_rThreeVector):
        return _CoreClient.VClient_GetCameraGlobalRotationEulerXYZ(self, i_rCameraName, o_rThreeVector)

    def GetCameraPrincipalPoint(self, i_rCameraName):
        return _CoreClient.VClient_GetCameraPrincipalPoint(self, i_rCameraName)

    def GetCameraFocalLength(self, i_rCameraName):
        return _CoreClient.VClient_GetCameraFocalLength(self, i_rCameraName)

    def GetCameraLensParameters(self, i_rCameraName, o_rThreeVector):
        return _CoreClient.VClient_GetCameraLensParameters(self, i_rCameraName, o_rThreeVector)

    def GetCentroidCount(self, i_rCameraName):
        return _CoreClient.VClient_GetCentroidCount(self, i_rCameraName)

    def GetCentroidPosition(self, i_rCameraName, i_CentroidIndex, o_rPosition):
        return _CoreClient.VClient_GetCentroidPosition(self, i_rCameraName, i_CentroidIndex, o_rPosition)

    def GetCentroidWeight(self, i_rCameraName, i_CentroidIndex):
        return _CoreClient.VClient_GetCentroidWeight(self, i_rCameraName, i_CentroidIndex)

    def GetGreyscaleBlobCount(self, i_rCameraName):
        return _CoreClient.VClient_GetGreyscaleBlobCount(self, i_rCameraName)

    def GetGreyscaleBlobSubsampleInfo(self, i_rCameraName, o_rTwiceOffsetX, o_rTwiceOffsetY, o_rSensorPixelsPerImagePixelX, o_rSensorPixelsPerImagePixelY):
        return _CoreClient.VClient_GetGreyscaleBlobSubsampleInfo(self, i_rCameraName, o_rTwiceOffsetX, o_rTwiceOffsetY, o_rSensorPixelsPerImagePixelX, o_rSensorPixelsPerImagePixelY)

    def GetGreyscaleBlob(self, i_rCameraName, i_BlobIndex, o_rLineXPositions, o_rLineYPositions, o_rLinePixelValues):
        return _CoreClient.VClient_GetGreyscaleBlob(self, i_rCameraName, i_BlobIndex, o_rLineXPositions, o_rLineYPositions, o_rLinePixelValues)

    def GetVideoFrame(self, i_rCameraName, o_rVideoFramePtr):
        return _CoreClient.VClient_GetVideoFrame(self, i_rCameraName, o_rVideoFramePtr)

    def SetCameraFilter(self, i_rCameraIdsForCentroids, i_rCameraIdsForBlobs, i_rCameraIdsForVideo):
        return _CoreClient.VClient_SetCameraFilter(self, i_rCameraIdsForCentroids, i_rCameraIdsForBlobs, i_rCameraIdsForVideo)

    def ClearSubjectFilter(self):
        return _CoreClient.VClient_ClearSubjectFilter(self)

    def AddToSubjectFilter(self, i_rSubjectName):
        return _CoreClient.VClient_AddToSubjectFilter(self, i_rSubjectName)

    def LatestFrame(self):
        return _CoreClient.VClient_LatestFrame(self)

    def CachedFrame(self):
        return _CoreClient.VClient_CachedFrame(self)

    def SetTimingLog(self, i_rClientLog, i_rCGStreamLog):
        return _CoreClient.VClient_SetTimingLog(self, i_rClientLog, i_rCGStreamLog)

    def ConfigureWireless(self):
        return _CoreClient.VClient_ConfigureWireless(self)

    def SetConnectionTimeout(self, i_Timeout):
        return _CoreClient.VClient_SetConnectionTimeout(self, i_Timeout)

    def NewClient(self):
        return _CoreClient.VClient_NewClient(self)

# Register VClient in _CoreClient:
_CoreClient.VClient_swigregister(VClient)

class VRetimingClient(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, i_rClient):
        _CoreClient.VRetimingClient_swiginit(self, _CoreClient.new_VRetimingClient(i_rClient))
    __swig_destroy__ = _CoreClient.delete_VRetimingClient

    def Connect(self, i_pClient, i_rHostName, i_bLightweight=False):
        return _CoreClient.VRetimingClient_Connect(self, i_pClient, i_rHostName, i_bLightweight)

    def Disconnect(self):
        return _CoreClient.VRetimingClient_Disconnect(self)

    def StartOutput(self, i_FrameRate):
        return _CoreClient.VRetimingClient_StartOutput(self, i_FrameRate)

    def StopOutput(self):
        return _CoreClient.VRetimingClient_StopOutput(self)

    def IsRunning(self):
        return _CoreClient.VRetimingClient_IsRunning(self)

    def UpdateFrame(self, i_Offset):
        return _CoreClient.VRetimingClient_UpdateFrame(self, i_Offset)

    def GetSubjectCount(self):
        return _CoreClient.VRetimingClient_GetSubjectCount(self)

    def GetSubjectName(self, i_SubjectIndex):
        return _CoreClient.VRetimingClient_GetSubjectName(self, i_SubjectIndex)

    def GetSubjectRootSegmentName(self, i_rSubjectName):
        return _CoreClient.VRetimingClient_GetSubjectRootSegmentName(self, i_rSubjectName)

    def GetSegmentCount(self, i_rSubjectName):
        return _CoreClient.VRetimingClient_GetSegmentCount(self, i_rSubjectName)

    def GetSegmentName(self, i_rSubjectName, i_SegmentIndex):
        return _CoreClient.VRetimingClient_GetSegmentName(self, i_rSubjectName, i_SegmentIndex)

    def GetSegmentChildCount(self, i_rSubjectName, i_rSegmentName):
        return _CoreClient.VRetimingClient_GetSegmentChildCount(self, i_rSubjectName, i_rSegmentName)

    def GetSegmentChildName(self, i_rSubjectName, i_rSegmentName, i_SegmentIndex):
        return _CoreClient.VRetimingClient_GetSegmentChildName(self, i_rSubjectName, i_rSegmentName, i_SegmentIndex)

    def GetSegmentParentName(self, i_rSubjectName, i_rSegmentName):
        return _CoreClient.VRetimingClient_GetSegmentParentName(self, i_rSubjectName, i_rSegmentName)

    def GetSegmentStaticTranslation(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentStaticTranslation(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentStaticRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentStaticRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentStaticRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation):
        return _CoreClient.VRetimingClient_GetSegmentStaticRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation)

    def GetSegmentStaticRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector):
        return _CoreClient.VRetimingClient_GetSegmentStaticRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector)

    def GetSegmentStaticRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentStaticRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentStaticScale(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentStaticScale(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentGlobalTranslation(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentGlobalTranslation(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentGlobalRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentGlobalRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentGlobalRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation):
        return _CoreClient.VRetimingClient_GetSegmentGlobalRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation)

    def GetSegmentGlobalRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector):
        return _CoreClient.VRetimingClient_GetSegmentGlobalRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector)

    def GetSegmentGlobalRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentGlobalRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentLocalTranslation(self, i_rSubjectName, i_rSegmentName, o_pThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentLocalTranslation(self, i_rSubjectName, i_rSegmentName, o_pThreeVector)

    def GetSegmentLocalRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentLocalRotationHelical(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def GetSegmentLocalRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation):
        return _CoreClient.VRetimingClient_GetSegmentLocalRotationMatrix(self, i_rSubjectName, i_rSegmentName, o_rRotation)

    def GetSegmentLocalRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector):
        return _CoreClient.VRetimingClient_GetSegmentLocalRotationQuaternion(self, i_rSubjectName, i_rSegmentName, o_rFourVector)

    def GetSegmentLocalRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector):
        return _CoreClient.VRetimingClient_GetSegmentLocalRotationEulerXYZ(self, i_rSubjectName, i_rSegmentName, o_rThreeVector)

    def WaitForFrame(self):
        return _CoreClient.VRetimingClient_WaitForFrame(self)

    def SetOutputLatency(self, i_OutputLatency):
        return _CoreClient.VRetimingClient_SetOutputLatency(self, i_OutputLatency)

    def OutputLatency(self):
        return _CoreClient.VRetimingClient_OutputLatency(self)

    def SetMaximumPrediction(self, i_MaxPrediction):
        return _CoreClient.VRetimingClient_SetMaximumPrediction(self, i_MaxPrediction)

    def MaximumPrediction(self):
        return _CoreClient.VRetimingClient_MaximumPrediction(self)

    def SetDebugLogFile(self, i_rLogFile):
        return _CoreClient.VRetimingClient_SetDebugLogFile(self, i_rLogFile)

    def SetOutputFile(self, i_rLogFile):
        return _CoreClient.VRetimingClient_SetOutputFile(self, i_rLogFile)

# Register VRetimingClient in _CoreClient:
_CoreClient.VRetimingClient_swigregister(VRetimingClient)



